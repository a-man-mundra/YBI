# -*- coding: utf-8 -*-
"""YbiInternshipProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1afv1BLGXkds6fa5MQY0XpV-yNDLextXd

# **Machine Learning Project: Mileage Prediction- Regression Analysis**

**Import Library**

---
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""**Import Dataset**

---


"""

df=pd.read_csv('https://github.com/YBIFoundation/Dataset/raw/main/MPG.csv')
df.info()

df.head()

df.nunique()

"""**Data Processing**

---


"""

df.info()

df.describe()

df.corr()

"""**Remove Missing Values**

---


"""

df=df.dropna()

df.info()

"""**Data Visualization**

---


"""

sns.pairplot(df,x_vars=['displacement','horsepower','weight','acceleration','mpg'],y_vars=['mpg'])

sns.regplot(x='displacement',y='mpg',data=df)

"""**Define target variable(y) & feature(x)**

---


"""

df.columns

y=df['mpg']
y.shape

x=df[['displacement','horsepower','weight','acceleration']]
x.shape

x

"""**Scaling Data**

---


"""

from sklearn.preprocessing import StandardScaler
ss=StandardScaler()
x=ss.fit_transform(x)
x

pd.DataFrame(x).describe()

"""**Train-Test Split**

---


"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y, train_size=0.7, random_state=2529)
x_train.shape, x_test.shape, y_train.shape, y_test.shape

"""**Linear Regression Model**

---


"""

from sklearn.linear_model import LinearRegression
model=LinearRegression()
model.fit(x_train,y_train)

model.intercept_

model.coef_

"""**Mileage = 23.4 - 1.05Displacement -1.68HorsePower -4.10Weight -0.115Acceleration + error**

**Predict Data**

---
"""

y_pred=model.predict(x_test)
y_pred

"""**Model Accuracy**

---


"""

from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error, r2_score
ae=mean_absolute_error(y_test,y_pred)
pe=mean_absolute_percentage_error(y_test,y_pred)
s=r2_score(y_test,y_pred)
print(ae)
print(pe)
print(s)

"""**Polynomial Regression**

---


"""

from sklearn.preprocessing import PolynomialFeatures
pol=PolynomialFeatures(degree=2, interaction_only=True, include_bias=False)
x_train2=pol.fit_transform(x_train)
x_test2=pol.fit_transform(x_test)
model.fit(x_train2,y_train)

i=model.intercept_
c=model.coef_
print(i)
print(c)

y_pred_pol=model.predict(x_test2)

"""**Model Accuracy**

---


"""

from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error,r2_score
ae=mean_absolute_error(y_test,y_pred_pol)
pe=mean_absolute_percentage_error(y_test,y_pred_pol)
s=r2_score(y_test,y_pred_pol)
print(ae)
print(pe)
print(s)